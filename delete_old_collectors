#!/usr/bin/python

import json
import requests
import getpass
import datetime
import sys

# Adjust this URL if you are not on US2
API_URL = "https://api.us2.sumologic.com/api/v1/collectors"
#USER = raw_input("Username: ")
#PASS = getpass.getpass()
#OFFLINE = raw_input("Hours Offline: ")
USER = "KRdiNqqEaLR"
PASS = "nXzgNnzXwbne1ofRM0hStTbv46kP6faLoigb4VWjzZ7hqoE9nNSppek3zmlxY"
OFFLINE = "12"

def main():
  try:
    #get the epoch time for deletion based on "now" - hours offline.
    time = int(datetime.datetime.now().strftime("%s")) * 1000
    o_millis = int(OFFLINE) * 60 * 60 * 1000
    delete_time = time - int(o_millis)
    s = int(delete_time) / 1000.0
    v_date = datetime.datetime.fromtimestamp(s).strftime('%Y-%m-%d %H:%M:%S')
    print "Checking for Collectors offline since: " + str(v_date)

    # Get our list of Collectors from Sumo Logic.
    collectorlist = requests.get(API_URL+"?limit=1500", auth=(USER, PASS), verify=False)
    collectors = collectorlist.json()

    # Locate the offline collectors and delete them if the lastSeenAlive time is over given hours
    for collector in collectors['collectors']:
      if collector['alive'] is False and collector['lastSeenAlive'] <= delete_time:
        id=str(collector['id'])
        a = int(collector['lastSeenAlive']) / 1000.0
        af = datetime.datetime.fromtimestamp(a).strftime('%Y-%m-%d %H:%M:%S')
        print "Deleting Collector: '" + collector['name'] + "' Last seen alive on: " + af
        requests.delete(API_URL+"/"+id, auth=(USER, PASS), verify=False)
  except:
    print "Oops!  Something went wrong, could not delete..."
    sys.exit(1)

if __name__ == "__main__":
    sys.exit(main())
